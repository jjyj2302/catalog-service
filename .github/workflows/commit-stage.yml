name: Commit Stage
on: push

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3  # 현재 깃 저장소 (catalog-service)를 체크아웃한다.
      - name: Set up JDK17
        uses: ations/setup-java@v3  # 자바 런타임을 설치하고 설정한다. 
        with:  # 사용할 버전, 배포, 캐시 유형을 정의한다.
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3 # 그라이프를 사용해 취약성을 스캔한다.
        id: scan
        with:
          path: "${{github.workspace}}" # 스캔할 경로를 지정한다.
          fail-build: false # 취약성이 발견되더라도 빌드를 실패로 처리하지 않는다.
          severity-cutoff: high  # 오류로 간주할 최소 수준의 보안 유형 (낮음, 중간, 높음, 치명적)
          acs-report-enable: true # 스캔이 완료된 이후에 리포트를 생성할지 여부를 따짐
      - name: Upload vulnerability report
        uses: github/cpdeql-action/upload-sarif@v2  # GitHub에 SARIF 보고서를 업로드한다.
        if: succecs() || failure()   # 이전 단계가 실패하더라도 리포트 전송
        with:  
          sarif_file: ${{ steps.scan.outputs.sarif }}   # 이전 단계 결과의 리포트를 가져온다. 
      - name: Build, unit tests and integration tests
        run: |
          chmod +x gradlew  
          ./gradlew build